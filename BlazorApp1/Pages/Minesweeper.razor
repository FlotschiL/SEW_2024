@page "/Minesweeper"
@using System.Drawing

<PageTitle>Minesweeper</PageTitle>

<h1>This is Minesweeper</h1>
<table class="connect4-grid">
    @for (int y = 0; y < 15; y++)
    {
        <tr>
            @for (int x = 0; x < 15; x++)
            {
                int localX = x; // Create local copies
                int localY = y;
                <td @onclick="() => Set(localX, localY)" style="color: 
                    @ColorTranslator.ToHtml(ColorMatcher[mine.Field[localX, localY].Value]);">
                    @mine[localX,localY]
                </td>
            }
        </tr>
    }
</table>
<h1>Status: @mine.Winner</h1>
<button class="btn btn-primary" @onclick="reset">reset</button>




@code{
    protected override async Task OnInitializedAsync()
    {
        ColorMatcher.Add(MinesweeperSq.One, Color.Blue);
        ColorMatcher.Add(MinesweeperSq.Two, Color.Green);
        ColorMatcher.Add(MinesweeperSq.Three, Color.Orange);
        ColorMatcher.Add(MinesweeperSq.Four, Color.Violet);
        ColorMatcher.Add(MinesweeperSq.Five, Color.Yellow);
        ColorMatcher.Add(MinesweeperSq.Bomb, Color.Red);
        ColorMatcher.Add(MinesweeperSq.None, Color.Wheat);
    }
    MineManager mine = new();//!!! Achtung darf nicht gleich wie die Page heißen sonst böse!!!!!!!!!!!
    Dictionary<MinesweeperSq, Color> ColorMatcher = new Dictionary<MinesweeperSq, Color>();
    private void Set(int x, int y)
    {
        if (mine.Winner != GameState.Lost.ToString())
        {
            mine.Set(x, y);
        }
    }

    public void reset()
    {
        mine = new();
    }

    //protected string this[int i, int i1] => Conn4[i, i1];
}