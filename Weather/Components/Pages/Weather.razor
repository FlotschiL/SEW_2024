@page "/weather"
@using System.Diagnostics
@using Google.Protobuf.WellKnownTypes
@using WeatherNameSpace;
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web
@using Mysqlx.Crud
@using Org.BouncyCastle.Asn1.X509
@attribute [StreamRendering]
@rendermode InteractiveServer

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

@if (_manager == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <h1>@_manager.Debug</h1>
    <table class="table">
        <thead>
        <tr>
            <th>Date</th>
            <th>Temp. (C)</th>
            <th>Actions</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var forecast in _manager)
        {
            <tr>
                @foreach (var column in forecast)
                {
                    <td>@column</td>
                }
                <td>
                    <button @onclick="@(() => Debug.WriteLine(_manager.entries.IndexOf(forecast)))">
                        @_manager.entries.IndexOf(forecast)
                    </button>
                    <button @onclick="() => _manager.Delete(forecast)">Delete</button>
                </td>
            </tr>
        }
        <tr>
            <td>
                <label for="Date">Date</label>
                <input id="Date" type="date" @bind = "Value"/>
                <label for="Val">Date</label>
                <input id="Val" type="number" @bind = "Value2"/>
            </td>
            <td>
                <button type="button" @onclick="Add">Submit</button>
            </td>
        </tr>

        </tbody>
    </table>
}

@code {
    private ForecastManager? _manager;
    DateTime Value { get; set; }
    int Value2 { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _manager = new();
        _manager.Initialize();
    }
    
    private void Add()
    {
        _manager.Add(new Forecast(Value, Value2.ToString()));
    }
}